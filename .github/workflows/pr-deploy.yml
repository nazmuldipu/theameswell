name: Deploy
on:
  pull_request:
    # when using teardown: 'true', add default event types + closed event type
    types: [opened, reopened, edited, synchronize, closed] 
    branches: ['cms-dev', 'cms-stage', 'cms-prod']
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Github Access Token
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}"
          mkdir ./build
      - name: Setup Node Environment (14.x)
        uses: actions/checkout@v2
        with:
#           ref: ${{ github.event.inputs.branch }}
          fetch-depth: 1
      - run: git checkout ${{ github.event.inputs.branch }}
      - name: Cache node modules
        uses: actions/cache@v2
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install  npm Packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Project Build (dev)
        if: ${{ github.event.pull_request.base.ref == 'cms-dev' }}
        run: npm run build-dev
      - name: Project Build (stage)
        if: ${{ github.event.pull_request.base.ref == 'cms-stage' }}
        run: npm run build-stage
      - name: Project Build (prod)
        if: ${{ github.event.pull_request.base.ref == 'cms-prod' }}
        run: npm run build-prod
      - name: Deploy on surge
        uses: afc163/surge-preview@v1
        with:
          surge_token: ${{ secrets.SURGE_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dist: build
          teardown: 'true'
          build: echo ""
      - name: Get git commit data
        uses: rlespinasse/git-commit-data-action@v1
      - name: Send mail notification for build
        if: always()
        uses: dawidd6/action-send-mail@v2
        with:
          # ses smtp server
          server_address: email-smtp.us-east-1.amazonaws.com
          # ses smtp port
          server_port: 587
          # ses user credentials
          username: ${{ secrets.USERNAME_SMTP_SERVER }}
          password: ${{ secrets.PASSWORD_SMTP_SERVER }}
          # email subject
          subject: ${{ github.event.repository.name }} (${{ github.head_ref }} to ${{ github.event.pull_request.base.ref }}) - PR Build # ${{ github.event.number }} - ${{ job.status }}!!!
          body: |
            Build job status of PR # ${{ github.event.number }} for ${{ github.event.repository.name }}: ${{ github.head_ref }} - ${{ job.status }}.
            Check console output at https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} to view the full result.
            Click on the following link to preview PR build âžµ https://{{repository.owner}}-{{repository.name}}-{{job.name}}-pr-{{pr.number}}.surge.sh.

            Thanks
            DevOps Team
            Skipper Hospitality
          # comma-separated string, send email to
          to: ${{ env.GIT_COMMIT_AUTHOR_EMAIL }}
          # from email name
          from: ${{ github.event.repository.name }} PR Build<no-reply@skipperhospitality.com>