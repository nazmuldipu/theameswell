name: Deploy
on:
  workflow_dispatch:
    inputs:
      brand_name:
        description: 'Brand name'
        default: 'Sundance'
      branch:
        description: 'Desired branch name'
        required: true
      bucket:
        description: 'S3 bucket name'
        required: true
      cloudfront_id:
        description: 'Cloudfront id'
        required: true
      notification_webhook:
        description: 'Webhook to trigger after the build has finished'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Github Access Token
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}"
      - name: Setup Node Environment (14.x)
        uses: actions/checkout@v2
        with:
#           ref: ${{ github.event.inputs.branch }}
          fetch-depth: 1
      - run: git checkout ${{ github.event.inputs.branch }}
      - name: Cache node modules
        uses: actions/cache@v2
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install  npm Packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Project Build (dev)
        if: ${{ github.ref == 'refs/heads/cms-dev' }}
#         run: npm run build-dev
        run: npm run build-stage
      - name: Project Build (stage)
        if: ${{ github.ref == 'refs/heads/cms-stage' }}
        run: npm run build-stage
      - name: Project Build (prod)
        if: ${{ github.ref == 'refs/heads/cms-prod' }}
        run: npm run build-prod
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: us-east-1
      - name: Sync from Build Directory to s3 Bucket
        run: aws s3 sync ./build s3://${{ github.event.inputs.bucket }} --acl public-read
      - name: Cloudfront Invalidation 
        run: aws cloudfront create-invalidation --distribution-id ${{ github.event.inputs.cloudfront_id }} --paths "/*"
      - name: Notification Webhook (websocket)
        if: ${{ always() && github.event.inputs.notification_webhook }}
        run: |
         curl "${{github.event.inputs.notification_webhook}}" -d '{"status": "${{job.status}}"}'
      - name: Send mail notification for build
        if: always()
        uses: dawidd6/action-send-mail@v2
        with:
          # ses smtp server
          server_address: email-smtp.us-east-1.amazonaws.com
          # ses smtp port
          server_port: 587
          # ses user credentials
          username: ${{ secrets.USERNAME_SMTP_SERVER }}
          password: ${{ secrets.PASSWORD_SMTP_SERVER }}
          # email subject
          subject: ${{ github.event.inputs.brand_name }} (${{ github.event.inputs.branch }}) - Build No ${{ github.run_number }} - ${{ job.status }}!!!
          body: |
            Build job status of ${{ github.event.inputs.brand_name }} (${{ github.event.inputs.branch }}) - ${{ job.status }}.
            Check console output at https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} to view the full result.
            Thanks
            DevOps Team
            Skipper Hospitality
          # comma-separated string, send email to
          to: devops@skipperhospitality.com
          # from email name
          from: ${{ github.event.inputs.brand_name }} Site Build Report<no-reply@skipperhospitality.com>
